name: Create and publish a Docker image

on:
  push:
    branches: ['main']
  pull_request:

jobs:
  build-and-test-images:
    strategy:
      fail-fast: false
      matrix:
        version: ["2.7", "3.0", "2.7-mysql", "3.0-mysql"]
        include:
          - version: "2.7"
            java: "11"
          - version: "3.0"
            java: "17"
          - version: "2.7-mysql"
            java: "11"
          - version: "3.0-mysql"
            java: "17"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and test Docker image
        run: |
          docker build -t test:latest -f Dockerfile --build-arg jvm_version=${{ matrix.java }} --build-arg version=${{ matrix.version }} spring-boot-${{ matrix.version }}/
          docker run --rm -d test:latest
          sleep 30
          docker exec -it test echo "I'm still alive!"

  build-and-push-image:
    strategy:
      matrix:
        version: ["2.7", "3.0", "2.7-mysql", "3.0-mysql"]
        include:
          - version: "2.7"
            java: "11"
          - version: "3.0"
            java: "17"
          - version: "2.7-mysql"
            java: "11"
          - version: "3.0-mysql"
            java: "17"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: "spring-boot-${{ matrix.version }}/"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository_owner }}/spring-boot:${{ matrix.version }}
          build-args: |
            jvm_version=${{ matrix.java }}
            version=${{ matrix.version }}
          file: "Dockerfile"

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build and push layered Docker image
        run: |
          cd spring-boot-${{ matrix.version }}
          ./gradlew bootBuildImage --imageName=ghcr.io/${{ github.repository_owner }}/spring-boot:${{ matrix.version }}-layered
          docker push ghcr.io/${{ github.repository_owner }}/spring-boot:${{ matrix.version }}-layered


